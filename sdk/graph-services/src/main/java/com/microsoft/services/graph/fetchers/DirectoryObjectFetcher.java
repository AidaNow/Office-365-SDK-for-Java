/*******************************************************************************
 Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
 Licensed under the MIT or Apache License; see LICENSE in the source repository
 root for authoritative license information.ï»¿

 **NOTE** This code was generated by a tool and will occasionally be
 overwritten. We welcome comments and issues regarding this code; they will be
 addressed in the generation tool. If you wish to submit pull requests, please
 do so for the templates in that tool.

 This code was generated by Vipr (https://github.com/microsoft/vipr) using
 the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).
 ******************************************************************************/
package com.microsoft.services.graph.fetchers;

import com.microsoft.services.graph.*;
import com.microsoft.services.orc.core.*;
import com.microsoft.services.orc.core.Readable;

/**
 * The type  DirectoryObjectFetcher.
 */
public class DirectoryObjectFetcher extends OrcEntityFetcher<DirectoryObject,DirectoryObjectOperations> 
                                     implements Readable<DirectoryObject> {

     /**
     * Instantiates a new DirectoryObjectFetcher.
     *
     * @param urlComponent the url component
     * @param parent the parent
     */
     public DirectoryObjectFetcher(String urlComponent, OrcExecutable parent) {
        super(urlComponent, parent, DirectoryObject.class, DirectoryObjectOperations.class);
    }

     /**
     * Add parameter.
     *
     * @param name the name
     * @param value the value
     * @return the fetcher
     */
    public DirectoryObjectFetcher addParameter(String name, Object value) {
        addCustomParameter(name, value);
        return this;
    }

     /**
     * Add header.
     *
     * @param name the name
     * @param value the value
     * @return the fetcher
     */
    public DirectoryObjectFetcher addHeader(String name, String value) {
        addCustomHeader(name, value);
        return this;
    }

    
    public ApplicationFetcher asApplication(){
        return new ApplicationFetcher(this.urlComponent, this.parent);
    }   

    public ExtensionPropertyFetcher asExtensionProperty(){
        return new ExtensionPropertyFetcher(this.urlComponent, this.parent);
    }   

    public UserFetcher asUser(){
        return new UserFetcher(this.urlComponent, this.parent);
    }   

    public AppRoleAssignmentFetcher asAppRoleAssignment(){
        return new AppRoleAssignmentFetcher(this.urlComponent, this.parent);
    }   

    public ContactFetcher asContact(){
        return new ContactFetcher(this.urlComponent, this.parent);
    }   

    public DeviceFetcher asDevice(){
        return new DeviceFetcher(this.urlComponent, this.parent);
    }   

    public DeviceConfigurationFetcher asDeviceConfiguration(){
        return new DeviceConfigurationFetcher(this.urlComponent, this.parent);
    }   

    public DirectoryLinkChangeFetcher asDirectoryLinkChange(){
        return new DirectoryLinkChangeFetcher(this.urlComponent, this.parent);
    }   

    public DirectoryRoleFetcher asDirectoryRole(){
        return new DirectoryRoleFetcher(this.urlComponent, this.parent);
    }   

    public DirectoryRoleTemplateFetcher asDirectoryRoleTemplate(){
        return new DirectoryRoleTemplateFetcher(this.urlComponent, this.parent);
    }   

    public GroupFetcher asGroup(){
        return new GroupFetcher(this.urlComponent, this.parent);
    }   

    public ServicePrincipalFetcher asServicePrincipal(){
        return new ServicePrincipalFetcher(this.urlComponent, this.parent);
    }   

    public TenantDetailFetcher asTenantDetail(){
        return new TenantDetailFetcher(this.urlComponent, this.parent);
    }   
    
}
